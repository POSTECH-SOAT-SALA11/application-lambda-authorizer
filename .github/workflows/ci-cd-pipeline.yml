name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload source code as artifact
        uses: actions/upload-artifact@v3
        with:
          name: source-code
          path: .
  
  setup:
    runs-on: ubuntu-latest
    needs: checkout

    steps:
      - name: Download source code artifact
        uses: actions/download-artifact@v3
        with:
          name: source-code

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

  build:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Download source code artifact
        uses: actions/download-artifact@v3
        with:
          name: source-code

      - name: Install dependencies
        run: |
          if [ -f lambda/requirements.txt ]; then pip install -r lambda/requirements.txt; fi

      - name: Zip Lambda function
        run: |
          cd lambda
          zip -r9 ../lambda_function.zip .

      - name: Upload Lambda zip as artifact
        uses: actions/upload-artifact@v3
        with:
          name: lambda-zip
          path: lambda_function.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
  
    steps:
      - name: Download Lambda Artifact
        uses: actions/download-artifact@v3
        with:
          name: lambda-zip
  
      - name: Upload Lambda to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "sa-east-1"
        run: |
          aws s3 cp lambda_function.zip s3://fonte-codigo-lambda-authorizer/lambda_function.zip
  
      - name: Trigger Terraform Pipeline
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GHUB_TOKEN }}" \
          https://api.github.com/repos/POSTECH-SOAT-SALA11/infra-lambda-authorizer/actions/workflows/ci-cd-pipeline.yml/dispatches \
          -d '{"ref":"main"}'

  post_actions:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: Clean up local files
        run: |
          rm -f lambda_function.zip
